
* bew
  this name is reversed web, for it will be less boring if use web in abnormal way:
  - not use client retrieve information, but setup server stream it
  - not boring waiting user get, push to them actively
  - not render on server, render on user's device
  - not use language as same as folks surround you
    - read pages written in non-native language
    - read machine language than human language
  - not GET oriented, but POST oriented
* feature
  - accept fs event 
    - mail
    - fold
    - log
  - accept HTTP upload
  - publish message to 0mq
* languages choosing
  do not choose among these meaningless options, should work on eio/ev
  by c and mainly focus on linux >2.6.24
  - ruby
    - event machine
    - 0mq ruby binding
    - rack
    - thin
  - js
    - node.js
    - 0mq js binding
  - c
    - subscriber wrapper
    - s0cat
    - mongrel2
* DONE fs event prototype [3/3]
  - [X] em and node.js both failed
    - can not report who changed
    - inotify implement can not report change in subdir
    - only get the notification then quickly check
  - [X] rsync method
    - algorithm is useful but it is too slow
    - rolling checksum
    - build list time
  - [X] scandir + stat
    - {struct timespec st_ctimespec : ino_t           st_ino}
    - Apple's scandir + tfind help and watcher sample are pretty cripple
    - (link "~/local/src/node/out/Release/deps/uv/src/unix/eio/demo.c" 4864)
    - eio's readdir is ready?
      - it is not magic, wrong macro inode and type, so sort doesn't works  
      - need write dir recursive
        
    





* TODO fs pub [8/9]
  SCHEDULED: <2012-01-17 Tue 13:30>
  CLOCK: [2012-01-20 Fri 04:45]--[2012-01-20 Fri 05:04] =>  0:19
  :PROPERTIES:
  :Clockhistory: 12
  | :Clock1:  | [2012-01-17 Tue 13:22]--[2012-01-17 Tue 16:45] =>  3:23 | init              |   203 |
  | :Clock2:  | [2012-01-17 Tue 16:59]--[2012-01-17 Tue 18:05] =>  1:06 | cbt               |    66 |
  | :Clock3:  | [2012-01-17 Tue 19:08]--[2012-01-17 Tue 20:24] =>  1:16 | cbt               |    76 |
  | :Clock4:  | [2012-01-18 Wed 06:55]--[2012-01-18 Wed 08:45] =>  1:50 | cbt               |   110 |
  | :Clock5:  | [2012-01-18 Wed 10:34]--[2012-01-18 Wed 13:28] =>  2:54 | cbt               |   174 |
  | :Clock6:  | [2012-01-18 Wed 16:20]--[2012-01-18 Wed 18:23] =>  2:03 | cbt               |   123 |
  | :Clock7:  | [2012-01-18 Wed 22:44]--[2012-01-18 Wed 23:59] =>  1:15 | eio + dir_node    |    75 |
  | :Clock8:  | [2012-01-18 Wed 23:59]--[2012-01-19 Thu 02:18] =>  2:19 | eio + remove node |   139 |
  | :Clock9:  | [2012-01-19 Thu 02:21]--[2012-01-19 Thu 03:16] =>  0:55 | eio + insert node |    55 |
  | :Clock10: | [2012-01-20 Fri 02:00]--[2012-01-20 Fri 04:00] =>  2:00 | fix kqueue flags  |   120 |
  | :Clock11: | [2012-01-20 Fri 04:12]--[2012-01-20 Fri 04:45] =>  0:33 | fix nodes remove  |    33 |
  | :Clock12: | [2012-01-20 Fri 04:45]--[2012-01-20 Fri 05:04] =>  0:19 | fix nodes add     |    19 |
  |           |                                                         |                   | 19.88 |
  #+TBLFM: $4='(convert-time-to-minutes $2)::@13$4=vsum(@1..@12)/60;%.2f
  :Effort:   3:00
  :Commit:   (git-link "~/local/src/critbit" "3b1730351bf32f25cdf481b4ef6420cbe0864cef")
             (git-link "~/local/src/bew" "5e5c0f4c87e2a7ad0c9f80a7f05053900059162c")
  :END:

  - [X] dir add and dir remove event
  - [X] data structure map dir -> fd
        - let cbt allocate path memory 
          if need merge with dir_node
  - [X] eio for dir add and remove
        - init dir tree insert
        - middle dir tree remove
        - middle dir tree insert
  - [X] merge pub
  - [X] fix single node insert
  - [X] fix files notify
  - [X] fix remove subdir
  - [X] fix add subdir
  - [ ] remove eio_readdir?
        
