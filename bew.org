
* bew
  this name is reversed web, for it will be less boring if use web in abnormal way:
  - not use client retrieve information, but setup server stream it
  - not boring waiting user get, push to them actively
  - not render on server, render on user's device
  - not use language as same as folks surround you
    - read pages written in non-native language
    - read machine language than human language
  - not GET oriented, but POST oriented
* feature
  - accept fs event 
    - mail
    - fold
    - log
  - publish message to 0mq
  - accept HTTP upload
* languages choosing
  do not choose among these meaningless options, should work on eio/ev
  by c and mainly focus on linux >2.6.24
  - ruby
    - event machine
    - 0mq ruby binding
    - rack
    - thin
  - js
    - node.js
    - 0mq js binding
  - c
    - subscriber wrapper
    - s0cat
    - mongrel2
* DONE fs event prototype [3/3]
  - [X] em and node.js both failed
    - can not report who changed
    - inotify implement can not report change in subdir
    - only get the notification then quickly check
  - [X] rsync method
    - algorithm is useful but it is too slow
    - rolling checksum
    - build list time
  - [X] scandir + stat
    - {struct timespec st_ctimespec : ino_t           st_ino}
    - Apple's scandir + tfind help and watcher sample are pretty cripple
    - (link "~/local/src/node/out/Release/deps/uv/src/unix/eio/demo.c" 4864)
    - eio's readdir is ready?
      - it is not magic, wrong macro inode and type, so sort doesn't works  
      - need write dir recursive

* DONE fs dir pub [15/15]
  SCHEDULED: <2012-01-17 Tue 13:30>
  CLOCK: [2012-01-28 Sat 22:27]--[2012-01-28 Sat 22:37] =>  0:10
  :PROPERTIES:
  :Clockhistory: 25
  | :Clock1:  | [2012-01-17 Tue 13:22]--[2012-01-17 Tue 16:45] =>  3:23 | init                     |   203 |
  | :Clock2:  | [2012-01-17 Tue 16:59]--[2012-01-17 Tue 18:05] =>  1:06 | cbt                      |    66 |
  | :Clock3:  | [2012-01-17 Tue 19:08]--[2012-01-17 Tue 20:24] =>  1:16 | cbt                      |    76 |
  | :Clock4:  | [2012-01-18 Wed 06:55]--[2012-01-18 Wed 08:45] =>  1:50 | cbt                      |   110 |
  | :Clock5:  | [2012-01-18 Wed 10:34]--[2012-01-18 Wed 13:28] =>  2:54 | cbt                      |   174 |
  | :Clock6:  | [2012-01-18 Wed 16:20]--[2012-01-18 Wed 18:23] =>  2:03 | cbt                      |   123 |
  | :Clock7:  | [2012-01-18 Wed 22:44]--[2012-01-18 Wed 23:59] =>  1:15 | eio + dir_node           |    75 |
  | :Clock8:  | [2012-01-18 Wed 23:59]--[2012-01-19 Thu 02:18] =>  2:19 | eio + remove node        |   139 |
  | :Clock9:  | [2012-01-19 Thu 02:21]--[2012-01-19 Thu 03:16] =>  0:55 | eio + insert node        |    55 |
  | :Clock10: | [2012-01-20 Fri 02:00]--[2012-01-20 Fri 04:00] =>  2:00 | fix kqueue flags         |   120 |
  | :Clock11: | [2012-01-20 Fri 04:12]--[2012-01-20 Fri 04:45] =>  0:33 | fix nodes remove         |    33 |
  | :Clock12: | [2012-01-20 Fri 04:45]--[2012-01-20 Fri 05:04] =>  0:19 | fix nodes add            |    19 |
  | :Clock13: | [2012-01-20 Fri 16:50]--[2012-01-20 Fri 17:30] =>  0:40 | fix add report           |    40 |
  | :Clock14: | [2012-01-21 Sat 10:48]--[2012-01-21 Sat 11:37] =>  0:49 | mkdir {b,c}              |    49 |
  | :Clock15: | [2012-01-27 Fri 14:09]--[2012-01-27 Fri 14:19] =>  0:10 | remove fix               |    10 |
  | :Clock16: | [2012-01-27 Fri 14:20]--[2012-01-27 Fri 16:32] =>  2:12 | try fix oneshot          |   132 |
  | :Clock17: | [2012-01-27 Fri 22:36]--[2012-01-27 Fri 23:01] =>  0:25 | move                     |    25 |
  | :Clock18: | [2012-01-27 Fri 23:43]--[2012-01-28 Sat 00:06] =>  0:23 | rename implement         |    23 |
  | :Clock19: | [2012-01-28 Sat 07:49]--[2012-01-28 Sat 08:16] =>  0:27 | cbt need data field      |    27 |
  | :Clock20: | [2012-01-28 Sat 11:09]--[2012-01-28 Sat 12:05] =>  0:56 | cbt map feature          |    56 |
  | :Clock21: | [2012-01-28 Sat 12:48]--[2012-01-28 Sat 16:01] =>  3:13 | cbt map feature          |   193 |
  | :Clock22: | [2012-01-28 Sat 16:03]--[2012-01-28 Sat 16:37] =>  0:34 | cbt merge                |    34 |
  | :Clock23: | [2012-01-28 Sat 16:03]--[2012-01-28 Sat 16:37] =>  0:34 | rename works             |    34 |
  | :Clock24: | [2012-01-28 Sat 21:50]--[2012-01-28 Sat 22:12] =>  0:22 | fix add search           |    22 |
  | :Clock25: | [2012-01-28 Sat 22:27]--[2012-01-28 Sat 22:37] =>  0:10 | split dir and file apart |    10 |
  |           |                                                         |                          | 30.80 |
  #+TBLFM: $4='(convert-time-to-minutes $2)::@26$4=vsum(@1..@25)/60;%.2f
  :Effort:   3:00
  :Commit:   (git-link "~/local/src/critbit" "3b1730351bf32f25cdf481b4ef6420cbe0864cef")
             (git-link "~/local/src/bew" "5e5c0f4c87e2a7ad0c9f80a7f05053900059162c")
             (git-link "~/local/src/critbit" "d20df81dcfd7aa666bb4781d074f756324468956")
  :END:

  - [X] dir add and dir remove event
  - [X] data structure map dir -> fd
        - let cbt allocate path memory 
          if need merge with dir_node
  - [X] eio for dir add and remove
        - init dir tree insert
        - middle dir tree remove
        - middle dir tree insert
  - [X] merge pub
  - [X] fix single node insert
  - [X] fix files notify
  - [X] fix remove subdir
  - [X] fix add subdir
  - [X] fix remove eio_readdir?
        it works now
  - [X] fix mkdir {b,c,d}
        - one shot can not fix this
          indeed there is no multiple messages sent out
        - eio_readdir can work with readdir?
        - can not insert second one
        - fix ngx_queue_split can fix this
  - [X] fix remove dir recursive
  - [X] fix oneshot and readd event
        - try dir_node cluster
        - check_queue has race condition problem ? idle can resolve ?
  - [X] fix add_nodes event
  - [X] fix duplicate remove
  - [X] fix mv
        - mkdir {b,c}; mv b c;
        - mv c d;
        - rename need remove_nodes
        - remove_nodes need cbt
        - branch remove_node and remove_nodes in eio_readdir ?
          use remove_nodes only now
* DONE fs dir/file pub [7/7]
  SCHEDULED: <2012-01-29 Sun 10:00>
  :PROPERTIES:
  :Effort:   8:00
  :Clockhistory: 9
  | :Clock1: | [2012-01-29 Sun 10:32]--[2012-01-29 Sun 12:32] =>  2:00 | init                 |  120 |
  | :Clock2: | [2012-01-29 Sun 12:41]--[2012-01-29 Sun 14:35] =>  1:54 | setup test           |  114 |
  | :Clock3: | [2012-01-29 Sun 14:39]--[2012-01-29 Sun 15:23] =>  0:44 | remove ngx_queue     |   44 |
  | :Clock4: | [2012-01-29 Sun 15:26]--[2012-01-29 Sun 16:09] =>  0:43 | report on file       |   43 |
  | :Clock5: | [2012-01-29 Sun 16:17]--[2012-01-29 Sun 16:37] =>  0:20 | finish               |   20 |
  | :Clock6: | [2012-01-29 Sun 16:52]--[2012-01-29 Sun 17:22] =>  0:30 | fix file event       |   30 |
  | :Clock7: | [2012-01-29 Sun 17:30]--[2012-01-29 Sun 18:19] =>  0:49 | send event           |   49 |
  | :Clock8: | [2012-01-30 Mon 06:03]--[2012-01-30 Mon 06:53] =>  0:50 | fix event            |   50 |
  | :Clock9: | [2012-01-30 Mon 16:02]--[2012-01-30 Mon 17:08] =>  1:06 | fix file rename/move |   66 |
  |          |                                                         |                      | 8.93 |
  #+TBLFM: $4='(convert-time-to-minutes $2)::@10$4=vsum(@1..@9)/60;%.2f
  :Commit:   (git-link "~/local/src/bew" "fs_dir_pub")
             (git-link "~/local/src/bew" "b740d999e5525679a06c5bb273f1c5129f259202")
  :END:
  - [X] fix cbt 
        - memcpy n should be sizeof(void *)?
        - logic
          (link "~/local/src/bew/src/cbt.c" 1174)
        - cbt_clear
          memcheck fs dir pub 
  - [X] remove ngx_queue based tree
  - [X] cbt tree with file
        - it is hard to report file delete only listen on dir
        - it is impossible report file change only listen on dir
        - try file watcher only watch new added file
        - allocate memory
  - [X] report on all files
        - add watcher when add
        - larger dir_node array
  - [X] remember added file watcher
  - [X] fix event can not send out from dir_node.c
        - add subdir
        - add file to cbt
        - z_dir
  - [X] file mv
        due to only check ctime ?
        (link "~/local/src/bew/src/evio.c" 1892)
        (link "~/local/src/bew/src/evio.c" 3099)
        - rename
        - move
* TODO portable fix [3/4]
  SCHEDULED: <2012-02-01 Wed 06:30>
  CLOCK: [2012-02-01 Wed 07:28]--[2012-02-01 Wed 10:18] =>  2:50
  :PROPERTIES:
  :Effort:   1:30
  :Clockhistory: 4
  | :Clock1: | [2012-02-01 Wed 06:32]--[2012-02-01 Wed 07:17] =>  0:45 | fd limit          |   45 |
  | :Clock2: | [2012-02-01 Wed 07:35]--[2012-02-01 Wed 07:42] =>  0:07 | code mv           |    7 |
  | :Clock3: | [2012-02-01 Wed 09:30]--[2012-02-01 Wed 10:15] =>  0:45 | src               |   45 |
  | :Clock4: | [2012-02-01 Wed 07:28]--[2012-02-01 Wed 10:18] =>  2:50 | inotify interface |  170 |
  |          |                                                         |                   | 4.45 |
  #+TBLFM: $4='(convert-time-to-minutes $2)::@5$4=vsum(@1..@4)/60;%.2f
  :END:
  - [X] possible watcher network folder, but slow
        - if change on watched place is fast
  - [X] add/remove large dir will cast negative fd error
        - assert report in evio
        - seems due to OS X file descriptors limitation
          sudo launchctl limit maxfiles oneproc all
          sysctl -A |grep kern.maxfilesperproc
          ulimit -n in .bashrc
          - the limit is 8k but die at 1.5k
          - due to loop symlink
          - due to larger than MAXFDNUM
          - link helpful
            http://wiki.basho.com/Open-Files-Limit.html
          - system limit is about 60k
            sudo launchctl limit maxfiles 163840 327680
            ulimit -n 163840
            32432 files need about 21M memeory
  - [X] port build
        - include all src
        - branch on OS of ev
        - compiler
        - configure system
  - [ ] linux port
        - try inotify interface
  - [ ] st time works with version file system ?
